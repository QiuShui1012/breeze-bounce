plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.7-SNAPSHOT" apply false
    id "me.shedaniel.unified-publishing" version "0.1.+"
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.modrinth.minotaur" version "2.8.4"
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "me.shedaniel.unified-publishing"
    apply plugin: "com.matthewprenger.cursegradle"
    apply plugin: "com.modrinth.minotaur"

    loom {
        silentMojangMappingsLicense()
    }

    repositories {
        maven { url "https://maven.parchmentmc.org" } // Parchment mappings

        maven { url 'https://maven.neoforged.net/releases' } // NeoForge
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.officialMojangMappings()
        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:1.20.1+build.10:v2"
    }

    tasks.processResources {
        var replaceProperties = [
                minecraft_version    : minecraft_version,
                minecraft_min_version: minecraft_min_version,
                minecraft_max_version: minecraft_max_version,

                mod_id               : project.mod_id,
                mod_name             : project.mod_name,
                mod_version          : project.mod_version,
                mod_license          : project.mod_license,
                mod_authors          : project.mod_authors,
                mod_description      : project.mod_description,
                mod_credits          : project.mod_credits,
                mod_homepage         : project.mod_homepage,
                mod_github           : project.mod_github,
                mod_issues           : project.mod_issues,
                mod_discord          : project.mod_discord
        ]

        inputs.properties replaceProperties

        filesMatching(["META-INF/neoforge.mods.toml", "fabric.mod.json", "pack.mcmeta"]) {
            expand replaceProperties + [project: project]
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    base {
        archivesName = rootProject.archives_base_name
    }

    def buildSuffix = mod_version_type != "release" ? "-${mod_version_type}" + (mod_build_number != "0" ? "-${mod_build_number}" : "") : ""

    version = "${project.name}-${rootProject.minecraft_version}-${rootProject.mod_version}${buildSuffix}"
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 21
    }

    java {
        withSourcesJar()
    }
}
